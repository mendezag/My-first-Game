<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Spr_Abajo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>macara_prota</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inicializacion
image_speed = 0;

enum ej { ///ej = estado jugador
    parado = Prota_parado,
    caminando = Prota_caminando
}

dir = "abajo";  ///direccion por defecto
estado = ej.parado; ///estado por defecto
salida = '-1';        ///Por dedefecto no aparecemos sobre una salida

global.debug = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inicializar el movimiento
VV = 0; ///VELOCIDAD VERTICAL
Vh = 0; ///VELOCIDAD HORIZONTAL
V = 2; /// VELOCIDAD GENERICA
///depth = -y;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CAPTURAR MOVIMIENTO POR TECLADO
Vh = (-keyboard_check(vk_left) + keyboard_check(vk_right)) *V;
VV = (-keyboard_check(vk_up) + keyboard_check(vk_down)) *V;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///GESTION DE ESTADO DE MOVIMIENTO

///DETERMINAMOS LA DIRECCION

if (VV &gt; 0) dir = "abajo";
else if (VV &lt; 0) dir = "arriba";
else if (Vh &gt; 0) dir = "derecha";
else if (Vh &lt; 0) dir = "izquierda";

///SI TENEMOS UNA DIRECCION ESTABLECEMOS EL ESTADO CAMINAR
if (dir !="") estado = ej.caminando;
///PERO SI NO NOS MOVEMOS ESTABLECEMOS EL ESTADO PARADO
if (Vh == 0 and VV ==0) estado = ej.parado;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///COLISIONES CONTRA PAREDES Y OBJETOS 
if (instance_place(x+Vh,y,Obj_pared)) { Vh = 0; }
if (instance_place(x,y+VV,Obj_pared)) { VV = 0; }
///COLISION HORIZONTAL DE OBJETO INTERACTIVO SOLO SI ESTA HABILITADA
interactivo = instance_place(x+Vh,y,Obj_Interactivo);
if (interactivo) {
    if (interactivo.colision == true){
        Vh = 0;
    }
}


interactivo = instance_place(x,y+VV,Obj_Interactivo);
if (interactivo) {
    if (interactivo.colision == true){
        VV = 0;
    }
}

///GESTION DE COLISION CONTRA ENTRADAS Y CAMBIO  DE ROOM
entrada = instance_place(x,y,Obj_entrada);
with (entrada) { 
    if (room_exists(mapa)) {   ///COMPROBAR ROOM DE DESTINO
        other.salida = salida; ///GUARDAR SALIDA DE DESTINO
        room_goto(mapa);      /// CAMBIAR ROOM DE DESTINO
    }
    else show_message ("No existe la room: " + entrada.mapa);

}

   
    

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ESTABLECER MOVIMIENTO FINAL Y ESTADO
x += Vh;
y += VV;
script_execute(estado);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TRANSPORTAR LA SALIDA POINT SI HAY
if (salida != '-1') {
    ///ITERAR TODAS LAS SALIDAS HASTA ENCONTRAR DESTINO
    with(Obj_salida){
        if (other.salida == nombre){
            ///MOVER AL JUGADOR Y REINICIAR SU PROXIMA SALIDA
            other.x = x;
            other.y = y
            other.salida = -1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CREACION DEL DEBUG
if (global.debug) {
    draw_set_font(f_debug);
    draw_set_halign(fa_left);
    draw_set_colour(c_white);
    draw_set_alpha(0.5);
    draw_rectangle(0,0,270,75,false);
    draw_set_color(c_black);
    draw_set_alpha(1);
    draw_text(2,2,"FPS/FPS REAL: " + string(fps)+"/"+string(fps_real));
    draw_text(2,20,"ESTADO: " + script_get_name(estado));
    draw_text(2,38, "SPRITE: " + sprite_get_name(sprite_index));
    draw_text(2,56,"IMAGE INDEX: " + string(image_index));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="112">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.debug = !global.debug;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
